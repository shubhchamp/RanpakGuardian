/**
 * Generated by Verge3D Puzzles v.3.6.1
 * Fri Sep 23 2022 14:56:43 GMT+0200 (heure d’été d’Europe centrale)
 * Prefer not editing this file as your changes may get overridden once Puzzles are saved.
 * Check out https://www.soft8soft.com/docs/manual/en/introduction/Using-JavaScript.html
 * for the information on how to add your own JavaScript to Verge3D apps.
 */

'use strict';

(function() {

// global variables/constants used by puzzles' functions

var LIST_NONE = '<none>';

var _pGlob = {};

_pGlob.objCache = {};
_pGlob.fadeAnnotations = true;
_pGlob.pickedObject = '';
_pGlob.hoveredObject = '';
_pGlob.mediaElements = {};
_pGlob.loadedFile = '';
_pGlob.states = [];
_pGlob.percentage = 0;
_pGlob.openedFile = '';
_pGlob.xrSessionAcquired = false;
_pGlob.xrSessionCallbacks = [];
_pGlob.screenCoords = new v3d.Vector2();
_pGlob.intervalTimers = {};

_pGlob.AXIS_X = new v3d.Vector3(1, 0, 0);
_pGlob.AXIS_Y = new v3d.Vector3(0, 1, 0);
_pGlob.AXIS_Z = new v3d.Vector3(0, 0, 1);
_pGlob.MIN_DRAG_SCALE = 10e-4;
_pGlob.SET_OBJ_ROT_EPS = 1e-8;

_pGlob.vec2Tmp = new v3d.Vector2();
_pGlob.vec2Tmp2 = new v3d.Vector2();
_pGlob.vec3Tmp = new v3d.Vector3();
_pGlob.vec3Tmp2 = new v3d.Vector3();
_pGlob.vec3Tmp3 = new v3d.Vector3();
_pGlob.vec3Tmp4 = new v3d.Vector3();
_pGlob.eulerTmp = new v3d.Euler();
_pGlob.eulerTmp2 = new v3d.Euler();
_pGlob.quatTmp = new v3d.Quaternion();
_pGlob.quatTmp2 = new v3d.Quaternion();
_pGlob.colorTmp = new v3d.Color();
_pGlob.mat4Tmp = new v3d.Matrix4();
_pGlob.planeTmp = new v3d.Plane();
_pGlob.raycasterTmp = new v3d.Raycaster();

var PL = v3d.PL = v3d.PL || {};

// a more readable alias for PL (stands for "Puzzle Logic")
v3d.puzzles = PL;

PL.procedures = PL.procedures || {};




PL.execInitPuzzles = function(options) {
    // always null, should not be available in "init" puzzles
    var appInstance = null;
    // app is more conventional than appInstance (used in exec script and app templates)
    var app = null;

    var _initGlob = {};
    _initGlob.percentage = 0;
    _initGlob.output = {
        initOptions: {
            fadeAnnotations: true,
            useBkgTransp: false,
            preserveDrawBuf: false,
            useCompAssets: false,
            useFullscreen: true,
            useCustomPreloader: false,
            preloaderStartCb: function() {},
            preloaderProgressCb: function() {},
            preloaderEndCb: function() {},
        }
    }

    // provide the container's id to puzzles that need access to the container
    _initGlob.container = options !== undefined && 'container' in options
            ? options.container : "";

    

    var PROC = {
    
};


// utility functions envoked by the HTML puzzles
function getElements(ids, isParent) {
    var elems = [];
    if (Array.isArray(ids) && ids[0] != 'CONTAINER' && ids[0] != 'WINDOW' &&
        ids[0] != 'DOCUMENT' && ids[0] != 'BODY' && ids[0] != 'QUERYSELECTOR') {
        for (var i = 0; i < ids.length; i++)
            elems.push(getElement(ids[i], isParent));
    } else {
        elems.push(getElement(ids, isParent));
    }
    return elems;
}

function getElement(id, isParent) {
    var elem;
    if (Array.isArray(id) && id[0] == 'CONTAINER') {
        if (appInstance !== null) {
            elem = appInstance.container;
        } else if (typeof _initGlob !== 'undefined') {
            // if we are on the initialization stage, we still can have access
            // to the container element
            var id = _initGlob.container;
            if (isParent) {
                elem = parent.document.getElementById(id);
            } else {
                elem = document.getElementById(id);
            }
        }
    } else if (Array.isArray(id) && id[0] == 'WINDOW') {
        if (isParent)
            elem = parent;
        else
            elem = window;
    } else if (Array.isArray(id) && id[0] == 'DOCUMENT') {
        if (isParent)
            elem = parent.document;
        else
            elem = document;
    } else if (Array.isArray(id) && id[0] == 'BODY') {
        if (isParent)
            elem = parent.document.body;
        else
            elem = document.body;
    } else if (Array.isArray(id) && id[0] == 'QUERYSELECTOR') {
        if (isParent)
            elem = parent.document.querySelector(id);
        else
            elem = document.querySelector(id);
    } else {
        if (isParent)
            elem = parent.document.getElementById(id);
        else
            elem = document.getElementById(id);
    }
    return elem;
}



// setHTMLElemStyle puzzle
function setHTMLElemStyle(prop, value, ids, isParent) {
    var elems = getElements(ids, isParent);
    for (var i = 0; i < elems.length; i++) {
        var elem = elems[i];
        if (!elem || !elem.style)
            continue;
        elem.style[prop] = value;
    }
}



// setHTMLElemAttribute puzzle
function setHTMLElemAttribute(attr, value, ids, isParent) {
    var elems = getElements(ids, isParent);
    for (var i = 0; i < elems.length; i++) {
        var elem = elems[i];
        if (!elem) continue;

        if (attr === 'style') {
            // NOTE: setting an attribute 'style' instead of a property 'style'
            // fixes IE11 wrong behavior
            elem.setAttribute(attr, value);
        } else if ((attr == 'href' || attr == 'src') && value instanceof Promise) {
            // resolve promise value for url-based attributes
            value.then(function(response) {
                elem[attr] = response;
            });
        } else {
            elem[attr] = value;
        }
    }
}




// initPreloader puzzle
_initGlob.output.initOptions.useCustomPreloader = true;
_initGlob.output.initOptions.preloaderStartCb = function() {
    _initGlob.percentage = 0;
    (function() {})();
};
_initGlob.output.initOptions.preloaderProgressCb = function(percentage) {
    _initGlob.percentage = percentage;
    (function() {
  setHTMLElemStyle('width', String(Math.round(_initGlob.percentage)) + '%', 'progress_bar', false);
  setHTMLElemAttribute('innerHTML', String(Math.round(_initGlob.percentage)) + '%', 'percentage', false);
})();
};
_initGlob.output.initOptions.preloaderEndCb = function() {
    _initGlob.percentage = 100;
    (function() {
  setHTMLElemStyle('display', 'none', 'preloader_div', false);
  setHTMLElemStyle('visibility', 'visible', ['boutonmenu', 'boutonmenu_return'], true);
  setHTMLElemStyle('visibility', 'visible', 'Title0', true);
  setHTMLElemStyle('left', '250px', 'menulist', true);
})();
};

    return _initGlob.output;
}

PL.init = function(appInstance, initOptions) {

// app is more conventional than appInstance (used in exec script and app templates)
var app = appInstance;

initOptions = initOptions || {};

if ('fadeAnnotations' in initOptions) {
    _pGlob.fadeAnnotations = initOptions.fadeAnnotations;
}

this.procedures["Reboot"] = Reboot;
this.procedures["restart"] = restart;
this.procedures["ShowAnnotationsElectricB"] = ShowAnnotationsElectricB;
this.procedures["ShowAnnotationsCutter"] = ShowAnnotationsCutter;
this.procedures["ShowAnnotationsFront"] = ShowAnnotationsFront;
this.procedures["ShowAnnotationsFeeder"] = ShowAnnotationsFeeder;
this.procedures["ShowAnnotationsFormer"] = ShowAnnotationsFormer;
this.procedures["HideAnnotations"] = HideAnnotations;

var PROC = {
    "Reboot": Reboot,
    "restart": restart,
    "ShowAnnotationsElectricB": ShowAnnotationsElectricB,
    "ShowAnnotationsCutter": ShowAnnotationsCutter,
    "ShowAnnotationsFront": ShowAnnotationsFront,
    "ShowAnnotationsFeeder": ShowAnnotationsFeeder,
    "ShowAnnotationsFormer": ShowAnnotationsFormer,
    "HideAnnotations": HideAnnotations,
};

var Split;


// bloom puzzle
function bloom(threshold, strength, radius) {
    appInstance.enablePostprocessing([{
        type: 'bloom',
        threshold: threshold,
        strength: strength,
        radius: radius
    }]);
}




// utility function envoked by almost all V3D-specific puzzles
// filter off some non-mesh types
function notIgnoredObj(obj) {
    return obj.type !== 'AmbientLight' &&
           obj.name !== '' &&
           !(obj.isMesh && obj.isMaterialGeneratedMesh) &&
           !obj.isAuxClippingMesh;
}


// utility function envoked by almost all V3D-specific puzzles
// find first occurence of the object by its name
function getObjectByName(objName) {
    var objFound;
    var runTime = _pGlob !== undefined;
    objFound = runTime ? _pGlob.objCache[objName] : null;

    if (objFound && objFound.name === objName)
        return objFound;

    appInstance.scene.traverse(function(obj) {
        if (!objFound && notIgnoredObj(obj) && (obj.name == objName)) {
            objFound = obj;
            if (runTime) {
                _pGlob.objCache[objName] = objFound;
            }
        }
    });
    return objFound;
}


// utility function envoked by almost all V3D-specific puzzles
// retrieve all objects on the scene
function getAllObjectNames() {
    var objNameList = [];
    appInstance.scene.traverse(function(obj) {
        if (notIgnoredObj(obj))
            objNameList.push(obj.name)
    });
    return objNameList;
}


// utility function envoked by almost all V3D-specific puzzles
// retrieve all objects which belong to the group
function getObjectNamesByGroupName(targetGroupName) {
    var objNameList = [];
    appInstance.scene.traverse(function(obj){
        if (notIgnoredObj(obj)) {
            var groupNames = obj.groupNames;
            if (!groupNames)
                return;
            for (var i = 0; i < groupNames.length; i++) {
                var groupName = groupNames[i];
                if (groupName == targetGroupName) {
                    objNameList.push(obj.name);
                }
            }
        }
    });
    return objNameList;
}


// utility function envoked by almost all V3D-specific puzzles
// process object input, which can be either single obj or array of objects, or a group
function retrieveObjectNames(objNames) {
    var acc = [];
    retrieveObjectNamesAcc(objNames, acc);
    return acc.filter(function(name) {
        return name;
    });
}

function retrieveObjectNamesAcc(currObjNames, acc) {
    if (typeof currObjNames == "string") {
        acc.push(currObjNames);
    } else if (Array.isArray(currObjNames) && currObjNames[0] == "GROUP") {
        var newObj = getObjectNamesByGroupName(currObjNames[1]);
        for (var i = 0; i < newObj.length; i++)
            acc.push(newObj[i]);
    } else if (Array.isArray(currObjNames) && currObjNames[0] == "ALL_OBJECTS") {
        var newObj = getAllObjectNames();
        for (var i = 0; i < newObj.length; i++)
            acc.push(newObj[i]);
    } else if (Array.isArray(currObjNames)) {
        for (var i = 0; i < currObjNames.length; i++)
            retrieveObjectNamesAcc(currObjNames[i], acc);
    }
}





/**
 * Retrieve coordinate system from the loaded scene
 */
function getCoordSystem() {
    var scene = appInstance.scene;

    if (scene && "v3d" in scene.userData && "coordSystem" in scene.userData.v3d) {
        return scene.userData.v3d.coordSystem;
    } else {
        // COMPAT: <2.17, consider replacing to 'Y_UP_RIGHT' for scenes with unknown origin
        return 'Z_UP_RIGHT';
    }
}


/**
 * Transform coordinates from one space to another
 * Can be used with Vector3 or Euler.
 */
function coordsTransform(coords, from, to, noSignChange) {

    if (from == to)
        return coords;

    var y = coords.y, z = coords.z;

    if (from == 'Z_UP_RIGHT' && to == 'Y_UP_RIGHT') {
        coords.y = z;
        coords.z = noSignChange ? y : -y;
    } else if (from == 'Y_UP_RIGHT' && to == 'Z_UP_RIGHT') {
        coords.y = noSignChange ? z : -z;
        coords.z = y;
    } else {
        console.error('coordsTransform: Unsupported coordinate space');
    }

    return coords;
}


/**
 * Verge3D euler rotation to Blender/Max shortest.
 * 1) Convert from intrinsic rotation (v3d) to extrinsic XYZ (Blender/Max default
 *    order) via reversion: XYZ -> ZYX
 * 2) swizzle ZYX->YZX
 * 3) choose the shortest rotation to resemble Blender's behavior
 */
var eulerV3DToBlenderShortest = function() {

    var eulerTmp = new v3d.Euler();
    var eulerTmp2 = new v3d.Euler();
    var vec3Tmp = new v3d.Vector3();

    return function(euler, dest) {

        var eulerBlender = eulerTmp.copy(euler).reorder('YZX');
        var eulerBlenderAlt = eulerTmp2.copy(eulerBlender).makeAlternative();

        var len = eulerBlender.toVector3(vec3Tmp).lengthSq();
        var lenAlt = eulerBlenderAlt.toVector3(vec3Tmp).lengthSq();

        dest.copy(len < lenAlt ? eulerBlender : eulerBlenderAlt);
        return coordsTransform(dest, 'Y_UP_RIGHT', 'Z_UP_RIGHT');
    }

}();




// tweenCamera puzzle
function tweenCamera(posOrObj, targetOrObj, duration, doSlot, movementType) {
    var camera = appInstance.getCamera();

    if (Array.isArray(posOrObj)) {
        var worldPos = _pGlob.vec3Tmp.fromArray(posOrObj);
        worldPos = coordsTransform(worldPos, getCoordSystem(), 'Y_UP_RIGHT');
    } else if (posOrObj) {
        var posObj = getObjectByName(posOrObj);
        if (!posObj) return;
        var worldPos = posObj.getWorldPosition(_pGlob.vec3Tmp);
    } else {
        // empty input means: don't change the position
        var worldPos = camera.getWorldPosition(_pGlob.vec3Tmp);
    }

    if (Array.isArray(targetOrObj)) {
        var worldTarget = _pGlob.vec3Tmp2.fromArray(targetOrObj);
        worldTarget = coordsTransform(worldTarget, getCoordSystem(), 'Y_UP_RIGHT');
    } else {
        var targObj = getObjectByName(targetOrObj);
        if (!targObj) return;
        var worldTarget = targObj.getWorldPosition(_pGlob.vec3Tmp2);
    }

    duration = Math.max(0, duration);

    if (appInstance.controls && appInstance.controls.tween) {
        // orbit and flying cameras
        if (!appInstance.controls.inTween) {
            appInstance.controls.tween(worldPos, worldTarget, duration, doSlot,
                    movementType);
        }
    } else {
        // TODO: static camera, just position it for now
        if (camera.parent) {
            camera.parent.worldToLocal(worldPos);
        }
        camera.position.copy(worldPos);
        camera.lookAt(worldTarget);
        doSlot();
    }
}



// setTimeout puzzle
function registerSetTimeout(timeout, callback) {
    window.setTimeout(callback, 1000 * timeout);
}



// getAnimations puzzle
function getAnimations(objSelector) {
    var objNames = retrieveObjectNames(objSelector);

    var animations = [];
    for (var i = 0; i < objNames.length; i++) {
        var objName = objNames[i];
        if (!objName)
            continue;
        // use objName as animName - for now we have one-to-one match
        var action = v3d.SceneUtils.getAnimationActionByName(appInstance, objName);
        if (action)
            animations.push(objName);
    }
    return animations;
}



/**
 * Get a scene that contains the root of the given action.
 */
function getSceneByAction(action) {
    var root = action.getRoot();
    var scene = root.type == "Scene" ? root : null;
    root.traverseAncestors(function(ancObj) {
        if (ancObj.type == "Scene") {
            scene = ancObj;
        }
    });
    return scene;
}



/**
 * Get the current scene's framerate.
 */
function getSceneAnimFrameRate(scene) {
    if (scene && "v3d" in scene.userData && "animFrameRate" in scene.userData.v3d) {
        return scene.userData.v3d.animFrameRate;
    }
    return 24;
}



_pGlob.animMixerCallbacks = [];

var initAnimationMixer = function() {

    function onMixerFinished(e) {
        var cb = _pGlob.animMixerCallbacks;
        var found = [];
        for (var i = 0; i < cb.length; i++) {
            if (cb[i][0] == e.action) {
                cb[i][0] = null; // desactivate
                found.push(cb[i][1]);
            }
        }
        for (var i = 0; i < found.length; i++) {
            found[i]();
        }
    }

    return function initAnimationMixer() {
        if (appInstance.mixer && !appInstance.mixer.hasEventListener('finished', onMixerFinished))
            appInstance.mixer.addEventListener('finished', onMixerFinished);
    };

}();



// animation puzzles
function operateAnimation(operation, animations, from, to, loop, speed, callback, isPlayAnimCompat, rev) {
    if (!animations)
        return;
    // input can be either single obj or array of objects
    if (typeof animations == "string")
        animations = [animations];

    function processAnimation(animName) {
        var action = v3d.SceneUtils.getAnimationActionByName(appInstance, animName);
        if (!action)
            return;
        switch (operation) {
        case 'PLAY':
            if (!action.isRunning()) {
                action.reset();
                if (loop && (loop != "AUTO"))
                    action.loop = v3d[loop];
                var scene = getSceneByAction(action);
                var frameRate = getSceneAnimFrameRate(scene);

                // compatibility reasons: deprecated playAnimation puzzles don't
                // change repetitions
                if (!isPlayAnimCompat) {
                    action.repetitions = Infinity;
                }

                var timeScale = Math.abs(parseFloat(speed));
                if (rev)
                    timeScale *= -1;

                action.timeScale = timeScale;
                action.timeStart = from !== null ? from/frameRate : 0;
                if (to !== null) {
                    action.getClip().duration = to/frameRate;
                } else {
                    action.getClip().resetDuration();
                }
                action.time = timeScale >= 0 ? action.timeStart : action.getClip().duration;

                action.paused = false;
                action.play();

                // push unique callbacks only
                var callbacks = _pGlob.animMixerCallbacks;
                var found = false;

                for (var j = 0; j < callbacks.length; j++)
                    if (callbacks[j][0] == action && callbacks[j][1] == callback)
                        found = true;

                if (!found)
                    _pGlob.animMixerCallbacks.push([action, callback]);
            }
            break;
        case 'STOP':
            action.stop();

            // remove callbacks
            var callbacks = _pGlob.animMixerCallbacks;
            for (var j = 0; j < callbacks.length; j++)
                if (callbacks[j][0] == action) {
                    callbacks.splice(j, 1);
                    j--
                }

            break;
        case 'PAUSE':
            action.paused = true;
            break;
        case 'RESUME':
            action.paused = false;
            break;
        case 'SET_FRAME':
            var scene = getSceneByAction(action);
            var frameRate = getSceneAnimFrameRate(scene);
            action.time = from ? from/frameRate : 0;
            action.play();
            action.paused = true;
            break;
        }
    }

    for (var i = 0; i < animations.length; i++) {
        var animName = animations[i];
        if (animName)
            processAnimation(animName);
    }

    initAnimationMixer();
}


// Describe this function...
function Reboot() {
  if (Split == 5) {

    operateAnimation('PLAY', getAnimations(['GROUP', 'ElectricModule']), 0, 300, 'LoopOnce', 6,
            function() {
      restart();
    }, undefined, true);

        } else if (Split == 4) {

    operateAnimation('PLAY', getAnimations(['GROUP', 'BaseModuleAnime']), 83, 395, 'LoopOnce', 6,
            function() {
      restart();
    }, undefined, true);

        } else if (Split == 3) {

    operateAnimation('PLAY', getAnimations(['GROUP', 'Feeder']), 0, 400, 'LoopOnce', 6,
            function() {

      operateAnimation('PLAY', getAnimations('CapotAV'), 0, 50, 'LoopOnce', 3,
              function() {}, undefined, true);

          registerSetTimeout(0.1, function() {
        restart();
      });
    }, undefined, true);

        } else if (Split == 2) {

    operateAnimation('PLAY', getAnimations(['GROUP', 'CutterModule']), 0, 440, 'LoopOnce', 6,
            function() {

      operateAnimation('PLAY', getAnimations('CapotAV'), 0, 50, 'LoopOnce', 3,
              function() {}, undefined, true);

          registerSetTimeout(0.1, function() {
        restart();
      });
    }, undefined, true);

        } else if (Split == 1) {

    operateAnimation('PLAY', getAnimations(['GROUP', 'FrontCoverAnime']), 0, 350, 'LoopOnce', 4,
            function() {}, undefined, true);

        restart();
  } else {
    restart();
  }
}


// show and hide puzzles
function changeVis(objSelector, bool) {
    var objNames = retrieveObjectNames(objSelector);

    for (var i = 0; i < objNames.length; i++) {
        var objName = objNames[i]
        if (!objName)
            continue;
        var obj = getObjectByName(objName);
        if (!obj)
            continue;
        obj.visible = bool;
    }
}



// utility functions envoked by the HTML puzzles
function getElements(ids, isParent) {
    var elems = [];
    if (Array.isArray(ids) && ids[0] != 'CONTAINER' && ids[0] != 'WINDOW' &&
        ids[0] != 'DOCUMENT' && ids[0] != 'BODY' && ids[0] != 'QUERYSELECTOR') {
        for (var i = 0; i < ids.length; i++)
            elems.push(getElement(ids[i], isParent));
    } else {
        elems.push(getElement(ids, isParent));
    }
    return elems;
}

function getElement(id, isParent) {
    var elem;
    if (Array.isArray(id) && id[0] == 'CONTAINER') {
        if (appInstance !== null) {
            elem = appInstance.container;
        } else if (typeof _initGlob !== 'undefined') {
            // if we are on the initialization stage, we still can have access
            // to the container element
            var id = _initGlob.container;
            if (isParent) {
                elem = parent.document.getElementById(id);
            } else {
                elem = document.getElementById(id);
            }
        }
    } else if (Array.isArray(id) && id[0] == 'WINDOW') {
        if (isParent)
            elem = parent;
        else
            elem = window;
    } else if (Array.isArray(id) && id[0] == 'DOCUMENT') {
        if (isParent)
            elem = parent.document;
        else
            elem = document;
    } else if (Array.isArray(id) && id[0] == 'BODY') {
        if (isParent)
            elem = parent.document.body;
        else
            elem = document.body;
    } else if (Array.isArray(id) && id[0] == 'QUERYSELECTOR') {
        if (isParent)
            elem = parent.document.querySelector(id);
        else
            elem = document.querySelector(id);
    } else {
        if (isParent)
            elem = parent.document.getElementById(id);
        else
            elem = document.getElementById(id);
    }
    return elem;
}



// setHTMLElemStyle puzzle
function setHTMLElemStyle(prop, value, ids, isParent) {
    var elems = getElements(ids, isParent);
    for (var i = 0; i < elems.length; i++) {
        var elem = elems[i];
        if (!elem || !elem.style)
            continue;
        elem.style[prop] = value;
    }
}



// eventHTMLElem puzzle
function eventHTMLElem(eventType, ids, isParent, callback) {
    var elems = getElements(ids, isParent);
    for (var i = 0; i < elems.length; i++) {
        var elem = elems[i];
        if (!elem)
            continue;
        elem.addEventListener(eventType, callback);
        if (v3d.PL.editorEventListeners)
            v3d.PL.editorEventListeners.push([elem, eventType, callback]);
    }
}



// outline puzzle
function outline(objSelector, doWhat) {
    var objNames = retrieveObjectNames(objSelector);

    if (!appInstance.postprocessing || !appInstance.postprocessing.outlinePass)
        return;
    var outlineArray = appInstance.postprocessing.outlinePass.selectedObjects;
    for (var i = 0; i < objNames.length; i++) {
        var objName = objNames[i];
        var obj = getObjectByName(objName);
        if (!obj)
            continue;
        if (doWhat == "ENABLE") {
            if (outlineArray.indexOf(obj) == -1)
                outlineArray.push(obj);
        } else {
            var index = outlineArray.indexOf(obj);
            if (index > -1)
                outlineArray.splice(index, 1);
        }
    }
}


// Describe this function...
function restart() {
  outline(['ALL_OBJECTS'], 'DISABLE');
  tweenCamera('CameraMainStart', 'FocusMain', 2, function() {}, 0);
  registerSetTimeout(0.5, function() {
    changeVis([['GROUP', 'WholeG'], ['GROUP', 'Former'], ['GROUP', 'Feeder'], ['GROUP', 'FrontCover'], ['GROUP', 'ElectricModule'], ['GROUP', 'CutterModule']], true);
  });
}


// setHTMLElemAttribute puzzle
function setHTMLElemAttribute(attr, value, ids, isParent) {
    var elems = getElements(ids, isParent);
    for (var i = 0; i < elems.length; i++) {
        var elem = elems[i];
        if (!elem) continue;

        if (attr === 'style') {
            // NOTE: setting an attribute 'style' instead of a property 'style'
            // fixes IE11 wrong behavior
            elem.setAttribute(attr, value);
        } else if ((attr == 'href' || attr == 'src') && value instanceof Promise) {
            // resolve promise value for url-based attributes
            value.then(function(response) {
                elem[attr] = response;
            });
        } else {
            elem[attr] = value;
        }
    }
}


// Describe this function...
function ShowAnnotationsElectricB() {
  setHTMLElemStyle('display', 'block', ['an_28', 'an_29', 'an_30', 'an_31', 'an_32', 'an_33', 'an_34', 'an_35', 'an_36', 'an_37', 'an_38', 'an_39', 'an_40'], false);
  eventHTMLElem('click', 'an_28', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'T6-amp inlet fuse 250V : 11014081', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'T6-amp inlet fuse 250V : 11014081', 'ValueContent', true);
    tweenCamera('', '150370', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['150370', '150370.001'], 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_28', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'T6-amp inlet fuse 250V : 11014081', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'T6-amp inlet fuse 250V : 11014081', 'ValueContent', true);
    tweenCamera('', '150370', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['150370', '150370.001'], 'ENABLE');
  });
  eventHTMLElem('click', 'an_29', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Power rubber insulation : 11018791', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Power rubber insulation : 11018791', 'ValueContent', true);
    tweenCamera('', '151093', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('151093', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_29', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Power rubber insulation : 11018791', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Power rubber insulation : 11018791', 'ValueContent', true);
    tweenCamera('', '151093', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('151093', 'ENABLE');
  });
  eventHTMLElem('click', 'an_30', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Power supply : 11013436', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Power supply : 11013436', 'ValueContent', true);
    tweenCamera('', 'Object.362', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('Object.362', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_30', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Power supply : 11013436', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Power supply : 11013436', 'ValueContent', true);
    tweenCamera('', 'Object.362', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('Object.362', 'ENABLE');
  });
  eventHTMLElem('click', 'an_31', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Safety Relay : 11010311', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Safety Relay : 11010311', 'ValueContent', true);
    tweenCamera('', '152193-01', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('152193-01', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_31', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Safety Relay : 11010311', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Safety Relay : 11010311', 'ValueContent', true);
    tweenCamera('', '152193-01', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('152193-01', 'ENABLE');
  });
  eventHTMLElem('click', 'an_32', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'PCB Guardian : 11014084', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'PCB Guardian : 11014084', 'ValueContent', true);
    tweenCamera('', '154600-01', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('154600-01', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_32', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'PCB Guardian : 11014084', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'PCB Guardian : 11014084', 'ValueContent', true);
    tweenCamera('', '154600-01', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('154600-01', 'ENABLE');
  });
  eventHTMLElem('click', 'an_33', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Panasonic PLC Box : 11014085', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Panasonic PLC Box : 11014085', 'ValueContent', true);
    tweenCamera('', 'Object.340', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('Object.340', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_33', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Panasonic PLC Box : 11014085', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Panasonic PLC Box : 11014085', 'ValueContent', true);
    tweenCamera('', 'Object.340', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('Object.340', 'ENABLE');
  });
  eventHTMLElem('click', 'an_34', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Flat cable 40 ways : 11014088', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Flat cable 40 ways : 11014088', 'ValueContent', true);
    tweenCamera('', '154606', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('154606', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_34', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Flat cable 40 ways : 11014088', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Flat cable 40 ways : 11014088', 'ValueContent', true);
    tweenCamera('', '154606', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('154606', 'ENABLE');
  });
  eventHTMLElem('click', 'an_35', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Circuit breacker 4A : 11013500', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Circuit breacker 4A : 11013500', 'ValueContent', true);
    tweenCamera('', 'EE-0827', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('EE-0827', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_35', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Circuit breacker 4A : 11013500', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Circuit breacker 4A : 11013500', 'ValueContent', true);
    tweenCamera('', 'EE-0827', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('EE-0827', 'ENABLE');
  });
  eventHTMLElem('click', 'an_36', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Circuit Breacker 15A : 11013553', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Circuit Breacker 15A : 11013553', 'ValueContent', true);
    tweenCamera('', 'EE-0988', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('EE-0988', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_36', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Circuit Breacker 15A : 11013553', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Circuit Breacker 15A : 11013553', 'ValueContent', true);
    tweenCamera('', 'EE-0988', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('EE-0988', 'ENABLE');
  });
  eventHTMLElem('click', 'an_37', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Main Power entry : 11018906', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Main Power entry : 11018906', 'ValueContent', true);
    tweenCamera('', 'EE-1413', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('EE-1413', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_37', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Main Power entry : 11018906', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Main Power entry : 11018906', 'ValueContent', true);
    tweenCamera('', 'EE-1413', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('EE-1413', 'ENABLE');
  });
  eventHTMLElem('click', 'an_38', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Power supply : 11018911', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Power supply : 11018911', 'ValueContent', true);
    tweenCamera('', 'EE-1418', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('EE-1418', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_38', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Power supply : 11018911', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Power supply : 11018911', 'ValueContent', true);
    tweenCamera('', 'EE-1418', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('EE-1418', 'ENABLE');
  });
  eventHTMLElem('click', 'an_39', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'T12-amp inlet fuse 00/127V : 11018922  ​', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'T12-amp inlet fuse 00/127V : 11018922  ​', 'ValueContent', true);
    tweenCamera('', '150370', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['150370', '150370.001'], 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_39', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'T12-amp inlet fuse 00/127V : 11018922  ​', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'T12-amp inlet fuse 00/127V : 11018922  ​', 'ValueContent', true);
    tweenCamera('', '150370', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['150370', '150370.001'], 'ENABLE');
  });
  eventHTMLElem('click', 'an_40', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Foot pedal : 11025415', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Foot pedal : 11025415', 'ValueContent', true);
    tweenCamera('', 'BasePedal', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('BasePedal', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_40', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Foot pedal : 11025415', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Foot pedal : 11025415', 'ValueContent', true);
    tweenCamera('', 'BasePedal', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('BasePedal', 'ENABLE');
  });
}

// Describe this function...
function ShowAnnotationsCutter() {
  setHTMLElemStyle('display', 'block', ['an_11', 'an_12', 'an_13', 'an_14', 'an_15', 'an_16', 'an_17'], false);
  eventHTMLElem('click', 'an_11', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Cut motor : 11025201', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Cut motor : 11025201', 'ValueContent', true);
    tweenCamera('', 'CutterMotor_128014', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('CutterMotor_128014', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_11', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Cut motor : 11025201', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Cut motor : 11025201', 'ValueContent', true);
    tweenCamera('', 'CutterMotor_128014', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('CutterMotor_128014', 'ENABLE');
  });
  eventHTMLElem('click', 'an_12', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Cut home sensor 1 : 11014095', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Cut home sensor 1 : 11014095', 'ValueContent', true);
    tweenCamera('', 'HomeSensorsHigh', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('HomeSensorsHigh', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_12', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Cut home sensor 1 : 11014095', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Cut home sensor 1 : 11014095', 'ValueContent', true);
    tweenCamera('', 'HomeSensorsHigh', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('HomeSensorsHigh', 'ENABLE');
  });
  eventHTMLElem('click', 'an_13', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Cut home sensor 2 : 11014096', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Cut home sensor 2 : 11014096', 'ValueContent', true);
    tweenCamera('', 'HomeSensorsLow', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('HomeSensorsLow', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_13', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Cut home sensor 2 : 11014096', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Cut home sensor 2 : 11014096', 'ValueContent', true);
    tweenCamera('', 'HomeSensorsLow', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('HomeSensorsLow', 'ENABLE');
  });
  eventHTMLElem('click', 'an_14', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Fix knife : 11014110', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Fix knife : 11014110', 'ValueContent', true);
    tweenCamera('', '400004', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('400004', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_14', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Fix knife : 11014110', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Fix knife : 11014110', 'ValueContent', true);
    tweenCamera('', '400004', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('400004', 'ENABLE');
  });
  eventHTMLElem('click', 'an_15', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Guillotine knife : 11014115', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Guillotine knife : 11014115', 'ValueContent', true);
    tweenCamera('', 'KnifeGuillotine_400009', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('KnifeGuillotine_400009', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_15', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Guillotine knife : 11014115', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Guillotine knife : 11014115', 'ValueContent', true);
    tweenCamera('', 'KnifeGuillotine_400009', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('KnifeGuillotine_400009', 'ENABLE');
  });
  eventHTMLElem('click', 'an_16', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Valve doors : 11014128', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Valve doors : 11014128', 'ValueContent', true);
    tweenCamera('', 'MainUnit.036', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['MainUnit.036', 'MainUnit.037'], 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_16', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Valve doors : 11014128', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Valve doors : 11014128', 'ValueContent', true);
    tweenCamera('', 'MainUnit.036', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['MainUnit.036', 'MainUnit.037'], 'ENABLE');
  });
  eventHTMLElem('click', 'an_17', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Extension spring : 11014161', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Extension spring : 11014161', 'ValueContent', true);
    tweenCamera('', '400140_ExtensionSpring', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('400140_ExtensionSpring', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_17', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Extension spring : 11014161', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Extension spring : 11014161', 'ValueContent', true);
    tweenCamera('', '400140_ExtensionSpring', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('400140_ExtensionSpring', 'ENABLE');
  });
}

// Describe this function...
function ShowAnnotationsFront() {
  setHTMLElemStyle('display', 'block', ['an_1', 'an_2', 'an_3', 'an_4', 'an_5', 'an_6', 'an_7', 'an_8', 'an_9', 'an_10'], false);
  eventHTMLElem('click', 'an_1', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Telescopic extender : 11014871', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Telescopic extender : 11014871', 'ValueContent', true);
    tweenCamera('', '131030.008', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['GROUP', 'VerinG'], 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_1', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Telescopic extender : 11014871', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Telescopic extender : 11014871', 'ValueContent', true);
    tweenCamera('', '131030.008', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['GROUP', 'VerinG'], 'ENABLE');
  });
  eventHTMLElem('click', 'an_2', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Telescopic extender : 11014871', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Telescopic extender : 11014871', 'ValueContent', true);
    tweenCamera('', '131030.002', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['GROUP', 'VerinD'], 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_2', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Telescopic extender : 11014871', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Telescopic extender : 11014871', 'ValueContent', true);
    tweenCamera('', '131030.002', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['GROUP', 'VerinD'], 'ENABLE');
  });
  eventHTMLElem('click', 'an_3', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Emergency stop button : 11014100', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Emergency stop button : 11014100', 'ValueContent', true);
    tweenCamera('', '154620', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('154620', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_3', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Emergency stop button : 11014100', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Emergency stop button : 11014100', 'ValueContent', true);
    tweenCamera('', '154620', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('154620', 'ENABLE');
  });
  eventHTMLElem('click', 'an_4', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Contact Blocks : 11014101', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Contact Blocks : 11014101', 'ValueContent', true);
    tweenCamera('', '154621', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['154621', '154621.001'], 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_4', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Contact Blocks : 11014101', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Contact Blocks : 11014101', 'ValueContent', true);
    tweenCamera('', '154621', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['154621', '154621.001'], 'ENABLE');
  });
  eventHTMLElem('click', 'an_5', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Baseholder for contact : 11014099', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Baseholder for contact : 11014099', 'ValueContent', true);
    tweenCamera('', '154619.001', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('154619.001', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_5', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Baseholder for contact : 11014099', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Baseholder for contact : 11014099', 'ValueContent', true);
    tweenCamera('', '154619.001', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('154619.001', 'ENABLE');
  });
  eventHTMLElem('click', 'an_6', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Door Contact FCS : 11014092', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Door Contact FCS : 11014092', 'ValueContent', true);
    tweenCamera('', '152192', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('152192', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_6', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Door Contact FCS : 11014092', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Door Contact FCS : 11014092', 'ValueContent', true);
    tweenCamera('', '152192', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('152192', 'ENABLE');
  });
  eventHTMLElem('click', 'an_7', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Door Contact FCS : 11014091', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Door Contact FCS : 11014091', 'ValueContent', true);
    tweenCamera('', '152191', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('152191', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_7', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Door Contact FCS : 11014091', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Door Contact FCS : 11014091', 'ValueContent', true);
    tweenCamera('', '152191', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('152191', 'ENABLE');
  });
  eventHTMLElem('click', 'an_8', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Locking knob : 11019012', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Locking knob : 11019012', 'ValueContent', true);
    tweenCamera('', 'PC-1573', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['PC-1573', 'PC-1573.001'], 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_8', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Locking knob : 11019012', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Locking knob : 11019012', 'ValueContent', true);
    tweenCamera('', 'PC-1573.001', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['PC-1573', 'PC-1573.001'], 'ENABLE');
  });
  eventHTMLElem('click', 'an_9', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'EDS Sensor : 11014097', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'EDS Sensor : 11014097', 'ValueContent', true);
    tweenCamera('', 'EDSBloc', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['EDSBloc', 'CableEDS.002'], 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_9', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'EDS Sensor : 11014097', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'EDS Sensor : 11014097', 'ValueContent', true);
    tweenCamera('', 'EDSBloc', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['EDSBloc', 'CableEDS.002'], 'ENABLE');
  });
  eventHTMLElem('click', 'an_10', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Reflector XUZC24 : 11014908', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Reflector XUZC24 : 11014908', 'ValueContent', true);
    tweenCamera('', 'Deflector', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('Deflector', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_10', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Reflector XUZC24 : 11014908', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Reflector XUZC24 : 11014908', 'ValueContent', true);
    tweenCamera('', 'Deflector', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('Deflector', 'ENABLE');
  });
}

// Describe this function...
function ShowAnnotationsFeeder() {
  setHTMLElemStyle('display', 'block', ['an_18', 'an_19', 'an_20', 'an_21', 'an_22', 'an_23', 'an_24', 'an_25'], false);
  eventHTMLElem('click', 'an_18', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Upper pad driver : 11014553', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Upper pad driver : 11014553', 'ValueContent', true);
    tweenCamera('', '111220', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['111220.001', '111220'], 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_18', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Upper pad driver : 111220', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Upper pad driver : 111220', 'ValueContent', true);
    tweenCamera('', '111220', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['111220.001', '111220'], 'ENABLE');
  });
  eventHTMLElem('click', 'an_19', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Lower gear guider : 11014554', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Lower gear guider : 11014554', 'ValueContent', true);
    tweenCamera('', '111221', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('111221', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_19', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Lower gear guider : 11014554', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Lower gear guider : 11014554', 'ValueContent', true);
    tweenCamera('', '111221', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('111221', 'ENABLE');
  });
  eventHTMLElem('click', 'an_20', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Compression spring : 11014635', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Compression spring : 11014635', 'ValueContent', true);
    tweenCamera('', 'FeederUnit.051', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['RessortSeul_121401', 'RessortSeul_121401.001'], 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_20', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Compression spring : 11014635', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Compression spring : 11014635', 'ValueContent', true);
    tweenCamera('', 'FeederUnit.051', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['RessortSeul_121401', 'RessortSeul_121401.001'], 'ENABLE');
  });
  eventHTMLElem('click', 'an_21', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Compression spring : 11014635', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Compression spring : 11014635', 'ValueContent', true);
    tweenCamera('', 'FeederUnit.051', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['RessortSeul_121401', 'RessortSeul_121401.001'], 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_21', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Compression spring : 11014635', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Compression spring : 11014635', 'ValueContent', true);
    tweenCamera('', 'FeederUnit.051', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline(['RessortSeul_121401', 'RessortSeul_121401.001'], 'ENABLE');
  });
  eventHTMLElem('click', 'an_22', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Encoder sensor : 11014094', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Encoder sensor : 11014094', 'ValueContent', true);
    tweenCamera('', 'EncoderSensor', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('EncoderSensor', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_22', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Encoder sensor : 11014094', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Encoder sensor : 11014094', 'ValueContent', true);
    tweenCamera('', 'EncoderSensor', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('EncoderSensor', 'ENABLE');
  });
  eventHTMLElem('click', 'an_23', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Gear tunnel : 11014118', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Gear tunnel : 11014118', 'ValueContent', true);
    tweenCamera('', 'Tunnel_400034', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('Tunnel_400034', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_23', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Gear tunnel : 11014118', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Gear tunnel : 11014118', 'ValueContent', true);
    tweenCamera('', 'Tunnel_400034', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('Tunnel_400034', 'ENABLE');
  });
  eventHTMLElem('click', 'an_24', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Feeder motor : 11014151', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Feeder motor : 11014151', 'ValueContent', true);
    tweenCamera('', 'CTRL_400127', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('FeederMotor_400127', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_24', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Feeder motor : 11014151', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Feeder motor : 11014151', 'ValueContent', true);
    tweenCamera('', 'CTRL_400127', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('FeederMotor_400127', 'ENABLE');
  });
  eventHTMLElem('click', 'an_25', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Gear set : 11014187', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Gear set : 11014187', 'ValueContent', true);
    tweenCamera('', 'CTRL_SupportMotor', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('Gearbox_400997', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_25', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Gear set : 11014187', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Gear set : 11014187', 'ValueContent', true);
    tweenCamera('', 'CTRL_SupportMotor', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('Gearbox_400997', 'ENABLE');
  });
}


function findUniqueObjectName(name) {
    function objNameUsed(name) {
        return Boolean(getObjectByName(name));
    }
    while (objNameUsed(name)) {
        var r = name.match(/^(.*?)(\d+)$/);
        if (!r) {
            name += "2";
        } else {
            name = r[1] + (parseInt(r[2], 10) + 1);
        }
    }
    return name;
}



// addAnnotation and removeAnnotation puzzles
function handleAnnot(add, annot, objSelector, contents, id, name) {
    var objNames = retrieveObjectNames(objSelector);

    for (var i = 0; i < objNames.length; i++) {
        var objName = objNames[i];
        if (!objName)
            continue;
        var obj = getObjectByName(objName);
        if (!obj)
            continue;
        // check if it already has an annotation and remove it
        for (var j = 0; j < obj.children.length; j++) {
            var child = obj.children[j];
            if (child.type == "Annotation") {
                // delete all childs of annotation
                child.traverse(function(child2) {
                    if (child2.isAnnotation)
                        child2.dispose();
                    });
                obj.remove(child);
            }
        }
        if (add) {
            var aObj = new v3d.Annotation(appInstance.container, annot, contents);
            aObj.name = findUniqueObjectName(name ? name : annot);
            aObj.fadeObscured = _pGlob.fadeAnnotations;
            if (id) {
                aObj.annotation.id = id;
                aObj.annotationDialog.id = id+'_dialog';
            }
            obj.add(aObj);
        }
    }
}


// Describe this function...
function ShowAnnotationsFormer() {
  setHTMLElemStyle('display', 'block', ['an_26', 'an_27'], false);
  eventHTMLElem('click', 'an_26', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Door Contact RCS : 11014092', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Door Contact RCS : 11014092', 'ValueContent', true);
    tweenCamera('', '154611', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('154611', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_26', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Door Contact RCS : 11014092', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Door Contact RCS : 11014092', 'ValueContent', true);
    tweenCamera('', '154611', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('154611', 'ENABLE');
  });
  eventHTMLElem('click', 'an_27', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Door Contact RCS : 11014091', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Door Contact RCS : 11014091', 'ValueContent', true);
    tweenCamera('', '154612', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('154612', 'ENABLE');
  });
  eventHTMLElem('touchstart', 'an_27', false, function(event) {
    setHTMLElemAttribute('innerHTML', 'Door Contact RCS : 11014091', 'RefDisplay', true);
    setHTMLElemAttribute('value', 'Door Contact RCS : 11014091', 'ValueContent', true);
    tweenCamera('', '154612', 1, function() {}, 0);
    outline(['ALL_OBJECTS'], 'DISABLE');
    outline('154612', 'ENABLE');
  });
}


// show and hide puzzles
function openCloseAnnotation(objSelector, bool) {
    var objNames = retrieveObjectNames(objSelector);

    for (var i = 0; i < objNames.length; i++) {
        var objName = objNames[i];
        if (!objName)
            continue;
        var obj = getObjectByName(objName);
        if (!obj)
            continue;

        if (obj.isAnnotation)
            obj.setDialogVisibility(bool);
    }
}


// Describe this function...
function HideAnnotations() {
  setHTMLElemStyle('display', 'none', ['an_1', 'an_2', 'an_3', 'an_4', 'an_5', 'an_6', 'an_7', 'an_8', 'an_9', 'an_10', 'an_11', 'an_12', 'an_13', 'an_14', 'an_15', 'an_16', 'an_17', 'an_18', 'an_19', 'an_20', 'an_21', 'an_22', 'an_23', 'an_24', 'an_25', 'an_26', 'an_27', 'an_28', 'an_29', 'an_30', 'an_31', 'an_32', 'an_33', 'an_34', 'an_35', 'an_36', 'an_37', 'an_38', 'an_39', 'an_40'], false);
  openCloseAnnotation(['VG', 'VD', 'ES', 'CB', 'BH', 'DC', 'DC2', 'LK', 'EDS', 'RX', 'MC', 'SC1', 'SC2', 'FK', 'GK', 'VA', 'VS', 'FS', 'FI', 'FSP1', 'FSP2', 'EC', 'GT', 'MF', 'GB', 'RDC', 'RDC2', 'T6', 'PR', 'PS0', 'SR', 'PCB', 'PLC', 'FC', 'CB1', 'CB2', 'MP', 'PS', 'T12', 'PD'], false);
  setHTMLElemAttribute('innerHTML', 'Nothing selected yet', 'RefDisplay', true);
  setHTMLElemAttribute('value', 'Nothing selected yet', 'ValueContent', true);
}


'Etats initiaux';
Split = 0;
bloom(1.2, 0.2, 1.5);
registerSetTimeout(1, function() {
  tweenCamera('CameraMainStart', 'FocusMain', 2, function() {}, 0);
});

'TouchStartmenu';
eventHTMLElem('touchstart', 'tap_One', true, function(event) {

  operateAnimation('PLAY', getAnimations(['GROUP', 'FrontCoverAnime']), 0, 350, 'AUTO', 2,
          function() {
    Split = 1;
    ShowAnnotationsFront();
  }, undefined, false);

      tweenCamera('CameraMainStart', 'FocusFront', 2, function() {}, 0);
  changeVis([['GROUP', 'WholeG'], ['GROUP', 'Former'], ['GROUP', 'Feeder'], ['GROUP', 'ElectricModule'], ['GROUP', 'CutterModule']], false);
  changeVis(['GROUP', 'FrontCover'], true);
  setHTMLElemStyle('visibility', 'hidden', 'Title4', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title5', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title2', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title3', true);
  setHTMLElemStyle('visibility', 'visible', 'Title1', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title0', true);
});

'clicmenu';
eventHTMLElem('click', 'tap_One', true, function(event) {

  operateAnimation('PLAY', getAnimations(['GROUP', 'FrontCoverAnime']), 0, 350, 'AUTO', 2,
          function() {
    Split = 1;
    ShowAnnotationsFront();
  }, undefined, false);

      tweenCamera('CameraMainStart', 'FocusFront', 2, function() {}, 0);
  changeVis([['GROUP', 'WholeG'], ['GROUP', 'Former'], ['GROUP', 'Feeder'], ['GROUP', 'ElectricModule'], ['GROUP', 'CutterModule']], false);
  changeVis(['GROUP', 'FrontCover'], true);
  setHTMLElemStyle('visibility', 'hidden', 'Title4', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title5', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title2', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title3', true);
  setHTMLElemStyle('visibility', 'visible', 'Title1', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title0', true);
});

eventHTMLElem('touchstart', 'tap_two', true, function(event) {

  operateAnimation('PLAY', getAnimations(['GROUP', 'CutterModule']), 0, 440, 'AUTO', 3,
          function() {
    Split = 2;
    ShowAnnotationsCutter();
  }, undefined, false);

      tweenCamera('CameraKnifeStart', 'FocusBlade', 2, function() {}, 0);
  changeVis([['GROUP', 'WholeG'], ['GROUP', 'Former'], ['GROUP', 'Feeder'], ['GROUP', 'ElectricModule'], ['GROUP', 'FrontCover']], false);
  changeVis(['GROUP', 'CutterModule'], true);
  setHTMLElemStyle('visibility', 'hidden', 'Title4', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title5', true);
  setHTMLElemStyle('visibility', 'visible', 'Title2', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title3', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title1', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title0', true);
});

'clicmenu';
eventHTMLElem('click', 'tap_exitcontent', true, function(event) {
  Reboot();
  HideAnnotations();
  setHTMLElemStyle('visibility', 'hidden', 'Title4', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title5', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title3', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title2', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title1', true);
  setHTMLElemStyle('visibility', 'visible', 'Title0', true);
});

eventHTMLElem('click', 'tap_two', true, function(event) {

  operateAnimation('PLAY', getAnimations(['GROUP', 'CutterModule']), 0, 440, 'AUTO', 3,
          function() {
    Split = 2;
    ShowAnnotationsCutter();
  }, undefined, false);

      tweenCamera('CameraKnifeStart', 'FocusBlade', 2, function() {}, 0);
  changeVis([['GROUP', 'WholeG'], ['GROUP', 'Former'], ['GROUP', 'Feeder'], ['GROUP', 'ElectricModule'], ['GROUP', 'FrontCover']], false);
  changeVis(['GROUP', 'CutterModule'], true);
  setHTMLElemStyle('visibility', 'hidden', 'Title4', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title5', true);
  setHTMLElemStyle('visibility', 'visible', 'Title2', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title3', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title1', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title0', true);
});

'TouchStartmenu';
eventHTMLElem('touchstart', 'tap_exitcontent', true, function(event) {
  Reboot();
  HideAnnotations();
  setHTMLElemStyle('visibility', 'hidden', 'Title4', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title5', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title3', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title2', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title1', true);
  setHTMLElemStyle('visibility', 'visible', 'Title0', true);
});

eventHTMLElem('touchstart', 'tap_Three', true, function(event) {

  operateAnimation('PLAY', getAnimations(['GROUP', 'Feeder']), 0, 400, 'AUTO', 3,
          function() {
    Split = 3;
    ShowAnnotationsFeeder();
  }, undefined, false);

      tweenCamera('CameraKnifeStart', 'FocusBlade', 2, function() {}, 0);
  changeVis([['GROUP', 'WholeG'], ['GROUP', 'Former'], ['GROUP', 'CutterModule'], ['GROUP', 'ElectricModule'], ['GROUP', 'FrontCover']], false);
  changeVis(['GROUP', 'Feeder'], true);
  setHTMLElemStyle('visibility', 'hidden', 'Title4', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title5', true);
  setHTMLElemStyle('visibility', 'visible', 'Title3', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title2', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title1', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title0', true);
});

eventHTMLElem('click', 'tap_Three', true, function(event) {

  operateAnimation('PLAY', getAnimations(['GROUP', 'Feeder']), 0, 400, 'AUTO', 3,
          function() {
    Split = 3;
    ShowAnnotationsFeeder();
  }, undefined, false);

      tweenCamera('CameraKnifeStart', 'FocusBlade', 2, function() {}, 0);
  changeVis([['GROUP', 'WholeG'], ['GROUP', 'Former'], ['GROUP', 'CutterModule'], ['GROUP', 'ElectricModule'], ['GROUP', 'FrontCover']], false);
  changeVis(['GROUP', 'Feeder'], true);
  setHTMLElemStyle('visibility', 'hidden', 'Title4', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title5', true);
  setHTMLElemStyle('visibility', 'visible', 'Title3', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title2', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title1', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title0', true);
});

'Selecteursynchro outline';
eventHTMLElem('pointerover', 'tap_One', true, function(event) {
  outline(['GROUP', 'FrontElements'], 'ENABLE');
});
eventHTMLElem('pointerout', 'tap_One', true, function(event) {
  outline(['GROUP', 'FrontElements'], 'DISABLE');
});
eventHTMLElem('pointerover', 'tap_two', true, function(event) {
  outline(['GROUP', 'CutterElements'], 'ENABLE');
});
eventHTMLElem('pointerout', 'tap_two', true, function(event) {
  outline(['GROUP', 'CutterElements'], 'DISABLE');
});
eventHTMLElem('pointerover', 'tap_Three', true, function(event) {
  outline(['GROUP', 'FeederElements'], 'ENABLE');
});
eventHTMLElem('pointerout', 'tap_Three', true, function(event) {
  outline(['GROUP', 'FeederElements'], 'DISABLE');
});
eventHTMLElem('pointerover', 'tap_Four', true, function(event) {
  outline(['GROUP', 'FormerElements'], 'ENABLE');
});
eventHTMLElem('pointerout', 'tap_Four', true, function(event) {
  outline(['GROUP', 'FormerElements'], 'DISABLE');
});
eventHTMLElem('pointerover', 'tap_Five', true, function(event) {
  outline(['GROUP', 'ElectricElements'], 'ENABLE');
});
eventHTMLElem('pointerout', 'tap_Five', true, function(event) {
  outline(['GROUP', 'ElectricElements'], 'DISABLE');
});

eventHTMLElem('touchstart', 'tap_Four', true, function(event) {

  operateAnimation('PLAY', getAnimations(['GROUP', 'BaseModuleAnime']), 83, 395, 'AUTO', 3,
          function() {
    Split = 4;
    ShowAnnotationsFormer();
  }, undefined, false);

      tweenCamera('CameraBack', 'FocusBack', 2, function() {}, 0);
  changeVis([['GROUP', 'WholeG'], ['GROUP', 'Feeder'], ['GROUP', 'CutterModule'], ['GROUP', 'ElectricModule'], ['GROUP', 'FrontCover']], false);
  changeVis(['GROUP', 'Former'], true);
  setHTMLElemStyle('visibility', 'visible', 'Title4', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title5', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title3', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title2', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title1', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title0', true);
});

eventHTMLElem('click', 'tap_Four', true, function(event) {

  operateAnimation('PLAY', getAnimations(['GROUP', 'BaseModuleAnime']), 83, 300, 'AUTO', 3,
          function() {
    Split = 4;
    ShowAnnotationsFormer();
  }, undefined, false);

      tweenCamera('CameraBack', 'FocusBack', 2, function() {}, 0);
  changeVis([['GROUP', 'WholeG'], ['GROUP', 'Feeder'], ['GROUP', 'CutterModule'], ['GROUP', 'ElectricModule'], ['GROUP', 'FrontCover']], false);
  changeVis(['GROUP', 'Former'], true);
  setHTMLElemStyle('visibility', 'visible', 'Title4', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title5', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title3', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title2', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title1', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title0', true);
});

eventHTMLElem('click', 'tap_Five', true, function(event) {

  operateAnimation('PLAY', getAnimations(['GROUP', 'ElectricModule']), 0, 400, 'AUTO', 3,
          function() {
    Split = 5;
    ShowAnnotationsElectricB();
  }, undefined, false);

      tweenCamera('CameraElectro', 'FocusBox', 2, function() {}, 0);
  changeVis([['GROUP', 'WholeG'], ['GROUP', 'Feeder'], ['GROUP', 'CutterModule'], ['GROUP', 'Former'], ['GROUP', 'FrontCover']], false);
  changeVis(['GROUP', 'ElectricModule'], true);
  setHTMLElemStyle('visibility', 'hidden', 'Title4', true);
  setHTMLElemStyle('visibility', 'visible', 'Title5', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title3', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title2', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title1', true);
  setHTMLElemStyle('visibility', 'hidden', 'Title0', true);
});

'Annotations';
handleAnnot(true, 'i', 'VerinG_ano', 'Telescopic extender : 11014871', 'an_1', 'VG');
handleAnnot(true, 'i', 'VerinD_ano', 'Telescopic extender : 11014871', 'an_2', 'VD');
handleAnnot(true, 'i', 'StopBouton_ano', 'Emergency stop button : 11014100', 'an_3', 'ES');
handleAnnot(true, 'i', 'Shuter_ano', 'Contact Blocks : 11014101', 'an_4', 'CB');
handleAnnot(true, 'i', 'Shuterpad_ano', 'Baseholder for contact : 11014099', 'an_5', 'BH');
handleAnnot(true, 'i', 'FrontOpenFix_ano', 'Door Contact FCS : 11014092', 'an_6', 'DC');
handleAnnot(true, 'i', 'FrontOpenMobile_ano', 'Door Contact FCS : 11014091', 'an_7', 'DC2');
handleAnnot(true, 'i', 'Knob_ano', 'Locking knob : 11019012', 'an_8', 'LK');
handleAnnot(true, 'i', 'EDS_ano', 'EDS Sensor : 11014097', 'an_9', 'EDS');
handleAnnot(true, 'i', 'Mirror_ano', 'Reflector XUZC24 : 11014908', 'an_10', 'RX');
handleAnnot(true, 'i', 'MotorCut_ano', 'Cut motor : 11025201', 'an_11', 'MC');
handleAnnot(true, 'i', 'SensorCut1_ano', 'Cut home sensor 1 : 11014095', 'an_12', 'SC1');
handleAnnot(true, 'i', 'SensorCut2_ano', 'Cut home sensor 2 : 11014096', 'an_13', 'SC2');
handleAnnot(true, 'i', 'FixKnife_ano', 'Fix knife : 11014110', 'an_14', 'FK');
handleAnnot(true, 'i', 'GuillotineKnife_ano', 'Guillotine knife : 11014115', 'an_15', 'GK');
handleAnnot(true, 'i', 'Valves.ano', 'Valve doors : 11014128', 'an_16', 'VA');
handleAnnot(true, 'i', 'ValveSpring.ano', 'Extension spring : 11014161', 'an_17', 'VS');
handleAnnot(true, 'i', 'FormerSup_ano', 'Upper pad driver : 11014553', 'an_18', 'FS');
handleAnnot(true, 'i', 'FormerInf_ano', 'Lower gear guider : 11014554', 'an_19', 'FI');
handleAnnot(true, 'i', 'FeedSring1_ano', 'Compression spring : 11014635', 'an_20', 'FSP1');
handleAnnot(true, 'i', 'FeedSring2_ano', 'Compression spring : 11014635', 'an_21', 'FSP2');
handleAnnot(true, 'i', 'Encoder_ano', 'Encoder sensor : 11014094', 'an_22', 'EC');
handleAnnot(true, 'i', 'GearTunnel_ano', 'Gear tunnel : 11014118', 'an_23', 'GT');
handleAnnot(true, 'i', 'MotorFeed_ano', 'Feeder motor : 11014151', 'an_24', 'MF');
handleAnnot(true, 'i', 'GearBox_ano', 'Gear set : 11014187', 'an_25', 'GB');
handleAnnot(true, 'i', 'RdoorMobile_ano', 'Door Contact RCS : 11014092', 'an_26', 'RDC');
handleAnnot(true, 'i', 'RdoorStatic_ano', 'Door Contact RCS : 154611', 'an_27', 'RDC2');
handleAnnot(true, 'i', 'TFuse_ano', 'T6-amp inlet fuse 250V : 11014081', 'an_28', 'T6');
handleAnnot(true, 'i', 'Insulation_ano', 'Power rubber insulation : 11018791', 'an_29', 'PR');
handleAnnot(true, 'i', 'Power1_ano', 'Power supply : 11013436', 'an_30', 'PS0');
handleAnnot(true, 'i', 'Relay_ano', 'Safety Relay : 11010311', 'an_31', 'SR');
handleAnnot(true, 'i', 'Board_ano', 'PCB Guardian : 11014084', 'an_32', 'PCB');
handleAnnot(true, 'i', 'PLC_ano', 'Panasonic PLC Box : 11014085', 'an_33', 'PLC');
handleAnnot(true, 'i', 'Cable_ano', 'Flat cable 40 ways : 11014088', 'an_34', 'FC');
handleAnnot(true, 'i', 'Ruptor1_ano', 'Circuit breacker 4A : 11013500', 'an_35', 'CB1');
handleAnnot(true, 'i', 'Ruptor2_ano', 'Circuit Breacker 15A : 11013553', 'an_36', 'CB2');
handleAnnot(true, 'i', 'MainSwitch_ano', 'Main Power entry : 11018906', 'an_37', 'MP');
handleAnnot(true, 'i', 'Power2_ano', 'Power supply : 11018911', 'an_38', 'PS');
handleAnnot(true, 'i', 'TFuse2_ano', 'T12-amp inlet fuse 00/127V : 11018922  ​', 'an_39', 'T12');
handleAnnot(true, 'i', 'Pedal_ano', 'Foot pedal : 11025415', 'an_40', 'PD');
setHTMLElemStyle('display', 'none', ['an_1', 'an_2', 'an_3', 'an_4', 'an_5', 'an_6', 'an_7', 'an_8', 'an_9', 'an_10', 'an_11', 'an_12', 'an_13', 'an_14', 'an_15', 'an_16', 'an_17', 'an_18', 'an_19', 'an_20', 'an_21', 'an_22', 'an_23', 'an_24', 'an_25', 'an_26', 'an_27', 'an_28', 'an_29', 'an_30', 'an_31', 'an_32', 'an_33', 'an_34', 'an_35', 'an_36', 'an_37', 'an_38', 'an_39', 'an_40'], false);



} // end of PL.init function

})(); // end of closure

/* ================================ end of code ============================= */
